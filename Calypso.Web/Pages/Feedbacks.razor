@page "/feedbacks"
@using System.Text.Json
@inject HttpClient Http

<h1>Feedbacks</h1>


@if (_feedbacks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table id="items" class="table">
        <thead>
        <tr>
            <th>Subject</th>
            <th>Machine</th>
            <th>Location</th>
            <th>Reporter</th>
            <th>Role</th>
            <th>Date</th>
            <th>Sbu</th>
            <th>Project name</th>
            <th>Product name</th>
            <th>Factory</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var feedback in _feedbacks)
        {
            <tr>
                <td>@feedback.Subject</td>
                <td>@feedback.Machine</td>
                <td>@feedback.Location</td>
                <td>@feedback.Reporter</td>
                <td>@feedback.Role</td>
                <td>@feedback.Date</td>
                <td>@feedback.Sbu</td>
                <td>@feedback.ProjectName</td>
                <td>@feedback.ProductName</td>
                <td>@feedback.Factory</td>
            </tr>
        }
        </tbody>
    </table>

    <style>
        #items {
            font-family: Arial, Helvetica, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        #items td, #items th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #items tr:nth-child(even){background-color: #f2f2f2;}

        #items tr:hover {background-color: #ddd;}

        #items th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: black;
            color: white;
        }
    </style>
}

@code {
    private IEnumerable<Feedback> _feedbacks;

    protected override async Task OnInitializedAsync()
    {
        var requestUri = new Uri("http://localhost:5000/api/Feedback?pageNumber=1&itemsPerPage=10");
        var response = await Http.GetAsync(requestUri);
        var content = await response.Content.ReadAsStringAsync();
        var pagedResult = JsonSerializer.Deserialize<PagedResult>(content, new JsonSerializerOptions
        {
            PropertyNameCaseInsensitive = true
        });
        _feedbacks = pagedResult.Items;
    }

    public class Feedback
    {
        public string Subject { get; set; }
        public string Machine { get; set; }
        public string Location { get; set; }
        public string Reporter { get; set; }
        public string Role { get; set; }
        public string Date { get; set; }
        public string Sbu { get; set; }
        public string ProjectName { get; set; }
        public string ProductName { get; set; }
        public string Factory { get; set; }
    }

    public class PagedResult
    {
        public int PageNumber { get; set; }
        public int ItemsPerPage { get; set; }
        public int TotalItems { get; set; }
        public IEnumerable<Feedback> Items { get; set; }
    }
}
